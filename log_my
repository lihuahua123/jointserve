conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt []
conversation turns: 0 request_func_input.prompt [{'role': 'user', 'content': 'You are now an imaginary expert business investigator. I am going to send you many rows of data. Each batch of row\'s will be sent to you and you may only reply "Received." Save any analysis or insights for after you\'ve received all of the data and I\'ve told you "Let\'s Begin." If you understand reply with only a ;)'}, {'role': 'assistant', 'content': '  ;)'}]
Traceback (most recent call last):
  File "/usr/lib/python3.11/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/root/jointserve/benchmark/multi_turn_example.py", line 189, in test
    await task
  File "/root/jointserve/benchmark/multi_turn_example.py", line 154, in client
    result = await async_request_openai_chat_completions(request_func_input=request_func_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/jointserve/benchmark/multi_turn_example.py", line 92, in async_request_openai_chat_completions
    async for chunk_bytes in response.content:
  File "/usr/local/lib/python3.11/dist-packages/aiohttp/streams.py", line 50, in __anext__
    rv = await self.read_func()
         ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/aiohttp/streams.py", line 317, in readline
    return await self.readuntil()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/aiohttp/streams.py", line 351, in readuntil
    await self._wait("readuntil")
  File "/usr/local/lib/python3.11/dist-packages/aiohttp/streams.py", line 312, in _wait
    await waiter
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/jointserve/benchmark/multi_turn_example.py", line 194, in <module>
    asyncio.run(test())
  File "/usr/lib/python3.11/asyncio/runners.py", line 190, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/runners.py", line 123, in run
    raise KeyboardInterrupt()
KeyboardInterrupt
